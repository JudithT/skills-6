Runtime
-------

1. Runtime for does_string_contain_letter:



2. Runtime for duplicate_letters:



3. Runtime for duplicate_letters2:



Stacks and Queues
-----------------


1. Which would be a better data structure for creating a Stack: a Linked List or 
   a built-in Python list? Explain why, referencing the runtime requirements for
   Stack operations (push, pop, etc).
    a built-in Python list would be better. Time complexity  would be constant. 
    Using a Linked List, we would need to traverse the list to find the last elememt 






2. Which would be a better data structure for creating a Queue: a Linked List or
   a built-in Python list? Explain why, referencing the runtime requirements for
   Queue methods (enqueue, dequeue, etc).

   a Linked List would be better for implementing a Queue.  The first item can be removed by reassigning the head. 



Trees
-----

1. Using the diagram in the instructions, in what order would a Breadth First
   Search (BFS) algorithm visit each node  until finding burritos (starting at
   food)?
   [food, italian,indian, mexican,lasagna, pizza, tika masala,saag,burritos]


2. Using the diagram in the instructions, In what order would a Depth First 
   Search (DFS) algorithm visit each node until finding Chicago-style (starting
   at food)? 
   
   [food,italian,lasagna,pizza,thin crust,Chicago-style, New-York style,Sicilian]

3. How is a binary search tree different from other trees?
In a binary tree, each parent has two children( right children is greater than left child)




